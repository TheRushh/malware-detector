from malware import *
import operator
import collections
from texttable import Texttable

print('--------------------- Training Phase ---------------------')
# Import original data
origdata = pd.read_csv('dataset_malwares.csv')


# # Feature selection Variance threshold

# df_w_f = variance_threshold_selector(origdata, 1000)
# print('***', df_w_f)


# Calculate variance of each feature
variance = {}
for column in origdata.columns.values[0:-5]:
    var = origdata[column].var()
    variance[column] = var
variance.pop('TimeDateStamp')
variance.pop('ImageBase')
sorted_var = sorted(variance.items(), key = lambda kv:kv[1])
# print (sorted_var)

# Selcting relevant columns (Feature Selection)
relevant_cols = []
# for k,v in variance.items():
#     if math.sqrt(v) > 30:
#         relevant_cols.append(k)
# print ('\nSelected Features:\n',relevant_cols)

for i in range (30):
    relevant_cols.append(sorted_var[-(i+1)][0])
print (relevant_cols)

data = pd.read_csv('dataset_malwares.csv', usecols = ['Type']+relevant_cols)

X, Y, X_train, X_test, y_train, y_test = splitdataset(data)
clf_gini = train_using_gini(X_train, y_train) 
clf_entropy = train_using_entropy(X_train, y_train)

# Operational Phase 
    
# Prediction using gini, train and test
print("\nResults Using Gini Index:") 
y_pred_gini = prediction(X_test, clf_gini) 
print('\nPredicted Values: ', y_pred_gini)
cal_accuracy(y_test, y_pred_gini) 

# Prediction using entropy, train and test
print("\nResults Using Entropy:") 
y_pred_entropy = prediction(X_test, clf_entropy) 
print('\nPredicted Values: ', y_pred_entropy)
cal_accuracy(y_test, y_pred_entropy) 


print('--------------------- Testing Phase ---------------------')
# Import test data
testdata = pd.read_csv('dataset_test.csv', usecols = ['Name']+relevant_cols)
predict_gini = prediction(testdata.values[:,1:],clf_gini)
predict_entropy = prediction(testdata.values[:,1:],clf_entropy)


ginitab = Texttable()
ginitab.header(['Name','Type'])
# Prediction usin gini, TEST
print('\nResults using Gini(TEST):\n')
for i in range (len(testdata)):
    if (predict_gini[i]):
        ginitab.add_row([testdata.values[i,0], 'Malware'])
        # print (testdata.values[i,0], ': Malware')
    else:
        ginitab.add_row([testdata.values[i,0], 'Genuine'])
        # print (testdata.values[i,0], ': Genuine')
print (ginitab.draw())


enttab = Texttable()
enttab.header(['Name','Type'])
# Prediction usin entropy, TEST
print('\nResults using Entropy(TEST):\n')
for i in range (len(testdata)):
    if (predict_entropy[i]):
        enttab.add_row([testdata.values[i,0], 'Malware'])
        # print (testdata.values[i,0], ': Malware')
    else:
        enttab.add_row([testdata.values[i,0], 'Genuine'])
        # print (testdata.values[i,0], ': Genuine')
print (enttab.draw(),'\n')
print('--------------------- END ---------------------')